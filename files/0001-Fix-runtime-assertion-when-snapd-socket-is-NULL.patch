From 3f84977a849decb41b9d1049db3f4f95c0a7f0bd Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey@solus-project.com>
Date: Tue, 26 Sep 2017 16:16:53 +0100
Subject: [PATCH] Fix runtime assertion when snapd socket is NULL

This was found whilst using the Python GIR bindings and deliberately
causing the snapd.socket service to fail (i.e. emulation of a missing
snapd service at runtime). During process exit and finalisation of the
SnapdClient object, the socket would be unconditionally closed regardless
of whether connection had succeeded or not.

This commit adds a very trivial guard around the cleanup.

Signed-off-by: Ikey Doherty <ikey@solus-project.com>
---
 snapd-glib/snapd-client.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/snapd-glib/snapd-client.c b/snapd-glib/snapd-client.c
index 3589a49..3ea0643 100644
--- a/snapd-glib/snapd-client.c
+++ b/snapd-glib/snapd-client.c
@@ -6044,7 +6044,8 @@ snapd_client_finalize (GObject *object)
     g_clear_object (&priv->auth_data);
     g_list_free_full (priv->requests, g_object_unref);
     priv->requests = NULL;
-    g_socket_close (priv->snapd_socket, NULL);
+    if (priv->snapd_socket != NULL)
+        g_socket_close (priv->snapd_socket, NULL);
     g_clear_object (&priv->snapd_socket);
     g_clear_pointer (&priv->buffer, g_byte_array_unref);
 }
-- 
2.14.2

